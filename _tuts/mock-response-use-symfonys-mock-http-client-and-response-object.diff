diff --git a/tests/Unit/Service/GithubServiceTest.php b/tests/Unit/Service/GithubServiceTest.php
index 847613a..1b30aab 100644
--- a/tests/Unit/Service/GithubServiceTest.php
+++ b/tests/Unit/Service/GithubServiceTest.php
@@ -6,6 +6,8 @@ use App\Enum\HealthStatus;
 use App\Service\GithubService;
 use PHPUnit\Framework\TestCase;
 use Psr\Log\LoggerInterface;
+use Symfony\Component\HttpClient\MockHttpClient;
+use Symfony\Component\HttpClient\Response\MockResponse;
 use Symfony\Contracts\HttpClient\HttpClientInterface;
 use Symfony\Contracts\HttpClient\ResponseInterface;
 
@@ -61,28 +63,15 @@ class GithubServiceTest extends TestCase
 
     public function testExceptionThrownWithUnknownLabel(): void
     {
-        $mockLogger = $this->createMock(LoggerInterface::class);
-        $mockHttpClient = $this->createMock(HttpClientInterface::class);
-        $mockResponse = $this->createMock(ResponseInterface::class);
-
-        $mockResponse
-            ->method('toArray')
-            ->willReturn([
+        $mockResponse = new MockResponse(json_encode([
                 [
                     'title' => 'Maverick',
                     'labels' => [['name' => 'Status: Drowsy']],
                 ],
-            ])
-        ;
+            ]));
 
-        $mockHttpClient
-            ->expects(self::once())
-            ->method('request')
-            ->with('GET', 'https://api.github.com/repos/SymfonyCasts/dino-park/issues')
-            ->willReturn($mockResponse)
-        ;
-
-        $service = new GithubService($mockHttpClient, $mockLogger);
+        $mockHttpClient = new MockHttpClient($mockResponse);
+        $service = new GithubService($mockHttpClient, $this->createMock(LoggerInterface::class));
 
         $this->expectException(\RuntimeException::class);
         $this->expectExceptionMessage('Drowsy is an unknown status label!');
