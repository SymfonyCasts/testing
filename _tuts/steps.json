{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "phpunit-get-test-pack",
            "name": "PHPUnit: get test-pack",
            "description": null
        },
        {
            "id": "first-test-simple-assert-equals",
            "name": "First Test: simple assert equals",
            "description": null
        },
        {
            "id": "first-test-without-test-prefix",
            "name": "First Test: without test prefix",
            "description": null
        },
        {
            "id": "first-test-add-missing-prefix",
            "name": "First Test: add missing prefix",
            "description": null
        },
        {
            "id": "first-test-first-failure-same-is-not-equal",
            "name": "First Test: first failure - same is not equal",
            "description": null
        },
        {
            "id": "dinosaur-real-test-useless",
            "name": "Dinosaur: real test (useless)",
            "description": null
        },
        {
            "id": "dinosaur-failed-assert-because-of-argument-order",
            "name": "Dinosaur: failed assert because of argument order",
            "description": null
        },
        {
            "id": "dinosaur-add-message-to-failed-assertion",
            "name": "Dinosaur: add message to failed assertion",
            "description": null
        },
        {
            "id": "dinosaur-cleanup-test",
            "name": "Dinosaur: cleanup test",
            "description": null
        },
        {
            "id": "tdd-intro-tdd-with-testgetsizedescription",
            "name": "TDD: intro TDD with testGetSizeDescription",
            "description": null
        },
        {
            "id": "tdd-step-2-add-simple-code-to-make-test-pass",
            "name": "TDD: step 2 - add simple code to make test pass",
            "description": null
        },
        {
            "id": "tdd-add-coniditonal",
            "name": "TDD: add coniditonal",
            "description": null
        },
        {
            "id": "tdd-add-medium-and-small-assertions",
            "name": "TDD: add medium and small assertions",
            "description": null
        },
        {
            "id": "tdd-add-medium-and-small-specification-to-make-test-pass",
            "name": "TDD: add medium and small specification to make test pass",
            "description": null
        },
        {
            "id": "tdd-step-4-refactor",
            "name": "TDD: step 4 refactor",
            "description": null
        },
        {
            "id": "tdd-show-spec-in-template",
            "name": "TDD: show spec in template",
            "description": null
        },
        {
            "id": "data-provider-create-a-get-specification-data-provider",
            "name": "Data Provider: create a get specification data provider",
            "description": null
        },
        {
            "id": "data-provider-add-at-dataprovider-annotation",
            "name": "Data Provider: add @dataProvider annotation",
            "description": null
        },
        {
            "id": "data-provider-use-message-keys",
            "name": "Data Provider: use message keys",
            "description": null
        },
        {
            "id": "data-provider-remove-assertsame-message-arg-and-cleanup",
            "name": "Data Provider: remove assertSame message arg and cleanup",
            "description": null
        },
        {
            "id": "data-provider-generator-return-type",
            "name": "Data Provider: generator return type",
            "description": null
        },
        {
            "id": "dino-health-assert-is-accepting-visitors-by-default",
            "name": "Dino Health: assert is accepting visitors by default",
            "description": null
        },
        {
            "id": "dino-health-add-default-visitor-logic",
            "name": "Dino Health: add default visitor logic",
            "description": null
        },
        {
            "id": "dino-health-assert-is-not-accepting-visitors-if-sick",
            "name": "Dino Health: assert is not accepting visitors if sick",
            "description": null
        },
        {
            "id": "dino-health-add-logic-to-not-allow-visitors-if-sick",
            "name": "Dino Health: add logic to not allow visitors if sick",
            "description": null
        },
        {
            "id": "dino-health-create-enum-of-health-status",
            "name": "Dino Health: create enum of health status",
            "description": null
        },
        {
            "id": "dino-health-use-health-enum",
            "name": "Dino Health: use health enum",
            "description": null
        },
        {
            "id": "dino-health-show-visitor-status-in-ui",
            "name": "Dino Health: show visitor status in UI",
            "description": null
        },
        {
            "id": "github-service-test-for-getdinohealthreports",
            "name": "GitHub Service: test for getDinoHealthReports",
            "description": null
        },
        {
            "id": "github-service-implement-the-service",
            "name": "GitHub Service: implement the service",
            "description": null
        },
        {
            "id": "github-service-require-the-http-client",
            "name": "GitHub Service: require the http client",
            "description": null
        },
        {
            "id": "github-service-use-the-http-client-in-our-service",
            "name": "GitHub Service: use the http client in our service",
            "description": null
        },
        {
            "id": "github-service-handel-status-prefix-on-lables",
            "name": "GitHub Service: handel status prefix on lables",
            "description": null
        },
        {
            "id": "github-service-log-exceptions-from-the-http-client",
            "name": "GitHub Service: log exceptions from the http-client",
            "description": null
        },
        {
            "id": "test-doubles-intro-mock-logger-instance",
            "name": "Test Doubles: intro mock logger instance",
            "description": null
        },
        {
            "id": "test-doubles-use-di-for-the-http-client",
            "name": "Test Doubles: use di for the http client",
            "description": null
        },
        {
            "id": "test-doubles-mock-the-http-client",
            "name": "Test Doubles: mock the http client",
            "description": null
        },
        {
            "id": "stubs-configure-http-client-request-method",
            "name": "Stubs: configure http client request method",
            "description": null
        },
        {
            "id": "stubs-configure-the-mocked-response",
            "name": "Stubs: configure the mocked response",
            "description": null
        },
        {
            "id": "stubs-mock-response-returns-fixture-array",
            "name": "Stubs: mock response returns fixture array",
            "description": null
        },
        {
            "id": "mock-objects-expect-the-client-to-call-request-once",
            "name": "Mock Objects: expect the client to call request once",
            "description": null
        },
        {
            "id": "mock-objects-expect-request-is-called-with-correct-data",
            "name": "Mock Objects: expect request is called with correct data",
            "description": null
        },
        {
            "id": "mock-objects-fix-expected-api-url",
            "name": "Mock Objects: fix expected api url",
            "description": null
        },
        {
            "id": "mock-objects-use-github-service-in-our-controller",
            "name": "Mock Objects: use github service in our controller",
            "description": null
        },
        {
            "id": "pre-exception-add-test-case-for-hungry-dinos",
            "name": "Pre Exception: add test case for hungry dinos",
            "description": null
        },
        {
            "id": "pre-exception-wire-up-our-data-provider",
            "name": "Pre Exception: wire up our data provider",
            "description": null
        },
        {
            "id": "pre-exception-hungry-dinos-can-accept-visitors",
            "name": "Pre Exception: hungry dinos can accept visitors",
            "description": null
        },
        {
            "id": "exceptions-throw-an-exception-with-unknown-status-label",
            "name": "Exceptions: throw an exception with unknown status label",
            "description": null
        },
        {
            "id": "exceptions-copy-testdinohealth-and-rename",
            "name": "Exceptions: Copy testDinoHealth and rename",
            "description": null
        },
        {
            "id": "exceptions-remove-expected-status-assertion",
            "name": "Exceptions: remove expected status assertion",
            "description": null
        },
        {
            "id": "exceptions-change-the-response",
            "name": "Exceptions: change the response",
            "description": null
        },
        {
            "id": "exceptions-add-exception-assertion",
            "name": "Exceptions: add exception assertion",
            "description": null
        },
        {
            "id": "exceptions-test-the-exception-message",
            "name": "Exceptions: test the exception message",
            "description": null
        },
        {
            "id": "mock-response-use-symfonys-mock-http-client-and-response-object",
            "name": "Mock Response: use symfonys mock http client and response object",
            "description": null
        },
        {
            "id": "setup-teardown-get-service",
            "name": "Setup TearDown: get service",
            "description": null
        },
        {
            "id": "setup-teardown-cleanup-the-test-and-setup",
            "name": "Setup TearDown: cleanup the test and setup",
            "description": null
        },
        {
            "id": "setup-teardown-use-mockhttpclient-with-provider-test",
            "name": "Setup TearDown: use MockHttpClient with provider test",
            "description": null
        }
    ],
    "sha": "97be53f91095ffdc748811a400bd880a36e6c810"
}