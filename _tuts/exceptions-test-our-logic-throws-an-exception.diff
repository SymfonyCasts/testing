diff --git a/tests/Unit/Service/GithubServiceTest.php b/tests/Unit/Service/GithubServiceTest.php
index 89a7ebf..8fa7ff1 100644
--- a/tests/Unit/Service/GithubServiceTest.php
+++ b/tests/Unit/Service/GithubServiceTest.php
@@ -97,4 +97,44 @@ class GithubServiceTest extends TestCase
             new Dinosaur('Maverick','Pterodactyl', 7, 'Aviary 1'),
         ];
     }
+
+    /** @dataProvider getExceptionFixture */
+    public function testExceptionThrownWithUnknownStatusLabel(string $expectedStatus, Dinosaur $fixture): void
+    {
+        $mockResponse = $this->createMock(ResponseInterface::class);
+        $mockResponse
+            ->method('toArray')
+            ->willReturn([
+                [
+                    'title' => 'Dennis',
+                    'labels' => [['name' => 'Status: Hungry']],
+                ],
+                [
+                    'title' => 'Bumpy',
+                    'labels' => [['name' => 'Status: Drowsy']],
+                ],
+            ]);
+
+        $mockHttpClient = $this->createMock(HttpClientInterface::class);
+        $mockHttpClient
+            ->expects(self::once())
+            ->method('request')
+            ->willReturn($mockResponse)
+        ;
+
+        $service = new GithubService($mockHttpClient, $this->createMock(LoggerInterface::class));
+
+        $service->getHealthReport($fixture);
+    }
+
+    public function getExceptionFixture(): \Generator
+    {
+        yield 'Hungry Dino' => [
+            new Dinosaur('Dennis','Pterodactyl', 7, 'Aviary 1'),
+        ];
+
+        yield 'Drowsy Dino' => [
+            new Dinosaur('Bumpy', 'Triceratops', 10, 'Paddock B'),
+        ];
+    }
 }
