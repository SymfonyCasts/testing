diff --git a/tests/Unit/Service/GithubServiceTest.php b/tests/Unit/Service/GithubServiceTest.php
index 1e11ec9..6dde59a 100644
--- a/tests/Unit/Service/GithubServiceTest.php
+++ b/tests/Unit/Service/GithubServiceTest.php
@@ -8,8 +8,6 @@ use PHPUnit\Framework\TestCase;
 use Psr\Log\LoggerInterface;
 use Symfony\Component\HttpClient\MockHttpClient;
 use Symfony\Component\HttpClient\Response\MockResponse;
-use Symfony\Contracts\HttpClient\HttpClientInterface;
-use Symfony\Contracts\HttpClient\ResponseInterface;
 
 class GithubServiceTest extends TestCase
 {
@@ -28,34 +26,21 @@ class GithubServiceTest extends TestCase
      */
     public function testGetHealthReportReturnsCorrectHealthStatusForDino(HealthStatus $expectedStatus, string $dinoName): void
     {
-        $mockLogger = $this->createMock(LoggerInterface::class);
-        $mockHttpClient = $this->createMock(HttpClientInterface::class);
-        $mockResponse = $this->createMock(ResponseInterface::class);
-
-        $mockResponse
-            ->method('toArray')
-            ->willReturn([
-                [
-                    'title' => 'Daisy',
-                    'labels' => [['name' => 'Status: Sick']],
-                ],
-                [
-                    'title' => 'Maverick',
-                    'labels' => [['name' => 'Status: Healthy']],
-                ],
-            ])
-        ;
-
-        $mockHttpClient
-            ->expects(self::once())
-            ->method('request')
-            ->with('GET', 'https://api.github.com/repos/SymfonyCasts/dino-park/issues')
-            ->willReturn($mockResponse)
-        ;
-
-        $service = new GithubService($mockHttpClient, $mockLogger);
+        $service = $this->createGithubService([
+            [
+                'title' => 'Daisy',
+                'labels' => [['name' => 'Status: Sick']],
+            ],
+            [
+                'title' => 'Maverick',
+                'labels' => [['name' => 'Status: Healthy']],
+            ],
+        ]);
 
         self::assertSame($expectedStatus, $service->getHealthReport($dinoName));
+        self::assertSame(1, $this->mockHttpClient->getRequestsCount());
+        self::assertSame('GET', $this->mockResponse->getRequestMethod());
+        self::assertSame('https://api.github.com/repos/SymfonyCasts/dino-park/issues', $this->mockResponse->getRequestUrl());
     }
 
     public function dinoNameProvider(): \Generator
